<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BAAAIAQAACAEAAAgBACAMAYAwDgHAOA8B4A=
</value>
  </data>
</root>