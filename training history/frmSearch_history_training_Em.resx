<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAA8AAABlAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAA
        AIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAZQAA
        AA8AAAAAAAAAAAAAAAAAAAAQCAcH5jg1MvVbVVD/W1VQ/1tVUP9bVVD/W1VQ/1tVUP9bVVD/W1VQ/1tV
        UP9bVVD/W1VQ/1tVUP9bVVD/W1VQ/1tVUP9bVVD/W1VQ/1tVUP9bVVD/W1VQ/1tVUP9bVVD/W1VQ/1tV
        UP83NDH1CAcH5QAAAA8AAAAAAAAAAAAAAGY4NTL1qp+W/6qflv+qn5b/qp+W/6qflv+qn5b/qp+W/6qf
        lv+qn5b/qp+W/6qflv+qn5b/qp+W/6qflv+qn5b/qp+W/6qflv+qn5b/qp+W/6qflv+qn5b/qp+W/6qf
        lv+qn5b/qp+W/6qflv84NDH1AAAAZQAAAAAAAAAAAAAAgCclI/9PSkb/T0pG/09KRv9PSkb/T0pG/09K
        Rv9PSkb/T0pG/09KRv9PSkb/T0pG/09KRv9PSkb/T0pG/09KRv9PSkb/T0pG/09KRv9PSkb/T0pG/09K
        Rv9PSkb/T0pG/09KRv9PSkb/T0pG/yclI/8AAACAAAAAAAAAAAAAAACAOjg2/3Rvbf90b23/dG9t/3Rv
        bf90b23/dG9t/3Rvbf90b23/dG9t/3Rvbf90b23/dG9t/3Rvbf90b23/dG9t/3Rvbf90b23/dG9t/3Rv
        bf90b23/dG9t/3Rvbf90b23/dG9t/3Rvbf90b23/Ojg2/wAAAIAAAAAAAAAAAAAAAIBsaGb/ysK+/29r
        af9lYl//ZWJf/2ViX/9lYl//ZWJf/2ViX/9lYl//ZWJf/2ViX/9lYl//ZWJf/2ViX/9lYl//ZWJf/2Vi
        X/9lYl//ZWJf/2ViX/9lYl//ZWJf/2ViX/9lYl//b2tp/8rCvv9saGb/AAAAgAAAAAAAAAAAAAAAgGxo
        Zv9ybmv/Pz49/358e/8/Pj3/Pz49/358e/9+fHv/fnx7/358e/9+fHv/fnx7/358e/9+fHv/fnx7/358
        e/9+fHv/fnx7/358e/9+fHv/fnx7/358e/8/Pj3/Pz49/358e/8/Pj3/c29s/2xoZv8AAACAAAAAAAAA
        AAAAAACAbGhm/2xoZv83NjX/b21r/zc2Nf83NjX/b21r/29ta/9vbWv/b21r/29ta/9vbWv/b21r/29t
        a/9vbWv/b21r/29ta/9vbWv/b21r/29ta/9vbWv/b21r/zc2Nf83NjX/b21r/zc2Nf9saGb/bGhm/wAA
        AIAAAAAAAAAAAAAAAIBsaGb/bGhm/z8+Pf9+fHv/Pz49/z8+Pf9+fHv/Pz49/z8+Pf9+fHv/Pz49/z8+
        Pf9+fHv/Pz49/z8+Pf9+fHv/Pz49/z8+Pf9+fHv/Pz49/z8+Pf9+fHv/Pz49/z8+Pf9+fHv/Pz49/2xo
        Zv9saGb/AAAAgAAAAAAAAAAAAAAAgGxoZv9saGb/NzY1/29ta/83NjX/NzY1/29ta/83NjX/NzY1/29t
        a/83NjX/NzY1/29ta/83NjX/NzY1/29ta/83NjX/NzY1/29ta/83NjX/NzY1/29ta/83NjX/NzY1/29t
        a/83NjX/bGhm/2xoZv8AAACAAAAAAAAAAAAAAACAbGhm/2xoZv8/Pj3/fnx7/z8+Pf8/Pj3/fnx7/z8+
        Pf8/Pj3/fnx7/z8+Pf8/Pj3/fnx7/z8+Pf8/Pj3/fnx7/z8+Pf8/Pj3/fnx7/z8+Pf8/Pj3/fnx7/z8+
        Pf8/Pj3/fnx7/z8+Pf9saGb/bGhm/wAAAIAAAAAAAAAAAAAAAIBsaGb/cm5r/zY2Nf9vbWv/NzY1/zc2
        Nf9vbWv/NzY1/zc2Nf9vbWv/NzY1/zc2Nf9vbWv/NzY1/zc2Nf9vbWv/NzY1/zc2Nf9vbWv/NzY1/zc2
        Nf9vbWv/NzY1/zc2Nf9vbWv/NjY1/3NvbP9saGb/AAAAgAAAAAAAAAAAAAAAgGxoZv/Jwb3/dnJv/3Rv
        bf90b23/dG9t/3Rvbf90b23/dG9t/3Rvbf90b23/dG9t/3Rvbf90b23/dG9t/3Rvbf90b23/dG9t/3Rv
        bf90b23/dG9t/3Rvbf90b23/dG9t/3Rvbf92cm//ysK+/2xoZv8AAACAAAAAAAAAAAAAAACAMjAv/2Vi
        X/9lYl//ZWJf/2ViX/9lYl//ZWJf/2ViX/9lYl//ZWJf/2ViX/9lYl//ZWJf/2ViX/9lYl//ZWJf/2Vi
        X/9lYl//ZWJf/2ViX/9lYl//ZWJf/2ViX/9lYl//ZWJf/2ViX/9lYl//MjAv/wAAAIAAAAAAAAAAAAAA
        AIAyLy3/ZV9b/2VfW/9lX1v/ZV9b/2VfW/9lX1v/ZV9b/2VfW/9lX1v/ZV9b/2VfW/9lX1v/ZV9b/2Vf
        W/9lX1v/ZV9b/2VfW/9lX1v/ZV9b/2VfW/9lX1v/ZV9b/2VfW/9lX1v/ZV9b/2VfW/8yLy3/AAAAgAAA
        AAAAAAAAAAAAgF5ZVf+wpZ7/YVtX/1hTT/9YU0//WFNP/1hTT/9YU0//WFNP/1hTT/9YU0//WFNP/1hT
        T/9YU0//WFNP/1hTT/9YU0//WFNP/1hTT/9YU0//WFNP/1hTT/9YU0//WFNP/1hTT/9hW1f/sKWe/15Z
        Vf8AAACAAAAAAAAAAAAAAACAXllV/2NeWf9AOB3/gnI4/4JyOP+Ccjj/gnI4/4JyOP+Ccjj/gnI4/4Jy
        OP+Ccjj/gnI4/4JyOP+Ccjj/gnI4/4JyOP+Ccjj/gnI4/4JyOP+Ccjj/gnI4/4JyOP+Ccjj/gnI4/0A4
        Hf9kXlr/XllV/wAAAIAAAAAAAAAAAAAAAIBeWVX/XllV/3prNP+znU3/cmQx/3JkMf9yZDH/cmQx/3Jk
        Mf9yZDH/cmQx/3JkMf9yZDH/cmQx/7OdTf/01mn/9NZp/9/EYP+ah0L/gnI4/5qHQv/fxGD/9NZp//TW
        af/01mn/ems0/15ZVf9eWVX/AAAAgAAAAAAAAAAAAAAAgF5ZVf9eWVX/ems0/499Pf8aISr/P1Ru/z9U
        bv8/VG7/P1Ru/z9Ubv8/VG7/P1Ru/z9Ubv8aISr/j309//PVaf+AcTv/DAsM/ycrSP8AAAD/KUNI/w0P
        Df+CdTz/9NZp//TWaf96azT/XllV/15ZVf8AAACAAAAAAAAAAAAAAACAXllV/15ZVf96azT/w6tU/xUY
        F/90m8v/dp7P/3aez/92ns//dp7P/3aez/92ns//dJvL/xUXFv/FrVX/gHE7/xgaJv9ecNv/UF65/wAA
        AP9Rm7b/YLjX/xkmJ/+BdDz/9NZp/3prNP9eWVX/XllV/wAAAIAAAAAAAAAAAAAAAIBeWVX/XllV/3pr
        NP/01mn/SUIl/zE/Tf9zmsn/dp7P/3aez/92ns//dp7P/3Oayf8xPkz/S0Mm/97DYP8MCwz/Xm/a/zE1
        Uv8rKif/aWdj/yoqJv8yTVL/YLnY/w0PDf/fxGD/ems0/15ZVf9eWVX/AAAAgAAAAAAAAAAAAAAAgF5Z
        Vf9eWVX/ems0//TWaf/qzmX/SkMm/xYYGP8zQlL/N0ph/zdKYf8zQlL/FRcX/0pDJ//qzmX/mIVB/ygs
        Sf9PXrj/LCso/+jk4f/t6eb/6OTh/yoqJv9Rm7b/KUNI/5qHQv96azT/XllV/15ZVf8AAACAAAAAAAAA
        AAAAAACAXllV/15ZVf96azT/t6BP/7egT//01mn/loRB/wYGBP9IUFf/R09W/wYGBP+WhEH/9NZp//TW
        af+AcDf/Mzxy/zxHi/9raWX/7enm/+3p5v/t6eb/amhk/wAAAP8AAAD/gHA3/3prNP9eWVX/XllV/wAA
        AIAAAAAAAAAAAAAAAIBeWVX/XllV/3prNP+3oE//t6BP//TWaf81MR//eYuh/7TQ8P+00PD/eIuf/zUx
        IP/01mn/9NZp/5iFQf8pLUr/T123/ywrKP/o5OH/7enm/+jk4f8rKif/Tly0/ysvTv+ZhkL/ems0/15Z
        Vf9eWVX/AAAAgAAAAAAAAAAAAAAAgF5ZVf9eWVX/ems0/7egT/+3oE//9NZp/wsLCP+sxuX/tNDw/7TQ
        8P+rxeT/CwsI//TWaf/01mn/3sNg/wwLDP9ecNv/MTRR/y0sKf9qaGX/LCsn/wEBAv9FUqD/DQ0N/9/E
        YP96azT/XllV/15ZVf8AAACAAAAAAAAAAAAAAACAXllV/15ZVf96azT/t6BP/7egT//01mn/NDAf/3mM
        ov+00PD/tNDw/3mLoP81MR//9NZp//TWaf/01mn/f3E7/xkaJ/9fcNz/T164/wAAAP9TcJL/SmSD/wAA
        AP+AcTv/9NZp/3prNP9eWVX/XllV/wAAAIAAAAAAAAAAAAAAAIBeWVX/XllV/3prNP+3oE//t6BP//TW
        af/AqVP/FBQP/0hRWP9IUVj/FBQP/8GqU//01mn/9NZp//TWaf/z1Wn/f3E7/wwMDf8oLEj/AAAA/y03
        QP8NDgz/gHI6//PVaf/01mn/ems0/15ZVf9eWVX/AAAAgAAAAAAAAAAAAAAAgF5ZVf9eWVX/ems0/7eg
        T/+3oE//9NZp//TWaf/cwV//koA//5KAP//cwV//9NZp//TWaf/01mn/9NZp//TWaf/01mn/3sNg/5iF
        Qf+Ccjj/mIVB/97DYP/01mn/9NZp//TWaf96azT/XllV/15ZVf8AAACAAAAAAAAAAAAAAACAXllV/2Ne
        Wf84MRn/cmQx/3JkMf9yZDH/cmQx/3JkMf9yZDH/cmQx/3JkMf9yZDH/cmQx/3JkMf9yZDH/cmQx/3Jk
        Mf9yZDH/cmQx/3JkMf9yZDH/cmQx/3JkMf9yZDH/cmQx/zgxGf9kXlr/XllV/wAAAIAAAAAAAAAAAAAA
        AGc/Ozj1r6Wd/2dhXf9lX1v/ZV9b/2VfW/9lX1v/ZV9b/2VfW/9lX1v/ZV9b/2VfW/9lX1v/ZV9b/2Vf
        W/9lX1v/ZV9b/2VfW/9lX1v/ZV9b/2VfW/9lX1v/ZV9b/2VfW/9lX1v/Z2Fd/7Clnv8+Ojj1AAAAZQAA
        AAAAAAAAAAAAEAkICOY/Ozn1WFNP/1hTT/9YU0//WFNP/1hTT/9YU0//WFNP/1hTT/9YU0//WFNP/1hT
        T/9YU0//WFNP/1hTT/9YU0//WFNP/1hTT/9YU0//WFNP/1hTT/9YU0//WFNP/1hTT/9YU0//Pzs49QgI
        COYAAAAPAAAAAAAAAAAAAAAAAAAAEAAAAGYAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAA
        AHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAA
        AHcAAABmAAAADwAAAAAAAAAAwAAAA4AAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAcAAAAM=
</value>
  </data>
</root>