<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAABEAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAIAeOUP/PHOG/wAAAP88c4b/PHOG/zxzhv88c4b/PHOG/zxzhv8AAAD/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAgDhrfv9w1/z/AAAA/3DX/P9w1/z/cNf8/3DX/P9w1/z/cNf8/wAA
        AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAOGt+/3DX/P8AAAD/cNf8/3DX/P9w1/z/cNf8/3DX
        /P9w1/z/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA4a37/cNf8/wAAAP9w1/z/cNf8/3DX
        /P9w1/z/cNf8/3DX/P8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgDhrfv9w1/z/AAAA/3DX
        /P9w1/z/cNf8/zhrfv84a37/cNf8/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0K1Ri+nDX
        /P8AAAD/cNf8/3DX/P9w1/z/OGt+/zhrfv9w1/z/AAAA/wAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ADcKFBj0bND0/zxzhv9w1/z/bdH1/0WEm/9FhZz/bdH1/3DX/P81ZXb7CRIV9AYNDskAAACIAAAAiAAA
        AIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAA
        AFoAAAABAAAAAAYLDrQpTlz4bND0/3DX/P8kQUv1MDc/9jU8RP8uSFP/cNf8/3DX/P9u0/f/Qn6U/wQF
        Bv9KSUj/fnx7/358e/9+fHv/fnx7/358e/9+fHv/fnx7/358e/9+fHv/fnx7/358e/9+fHv/fnx7/358
        e/9+fHv/ISAg9AAAAFsAAAAAAAAADAYLDrUKFBj0K1Ri+gMEBP1PW2n/Tlto/wUGB/86boH/T5mz/2/U
        +f9w1/z/T5ex/xQXGP/e2tj/7enm/9zZ1v96eHb/b21r/29ta/9vbWv/b21r/29ta/9vbWv/b21r/29t
        a/9vbWv/enh2/9zZ1v92dHP/AAAAgAAAAAAAAAAAAAAAAAAAACwBAQLkCgwP9UNNWvVKVF//ExUW/wwM
        DP8uMjT/HzE3/2nK7P9w1/z/KktW/3h3dv/t6eb/fXp5/z40GP98Zyr/fGcq/3xnKv98Zyr/fGcq/3xn
        Kv98Zyr/fGcq/3xnKv8+NBj/fXt6/3Z0c/8AAACAAAAAAAAAAAAAAAAAAgICbx4jKPOowuD/tNDw/7TQ
        8P+owuD/Jysx/4eFhP9fYGD/Mlhl/3DX/P9Uor7/KC0u/+3p5v92dHP/dGAn/6+RO/+vkTv/r5E7/6+R
        O/+vkTv/r5E7/+nBT//pwU//6cFP/3RgJ/92dHP/dnRz/wAAAIAAAAAAAAAAAAAAAAAJCgzji6G5/7TQ
        8P+00PD/tNDw/7TQ8P+Kn7j/IyMl/9XRz/8RFxn/cNf8/2jH6f8JCwv/7enm/3Z0c/90YCf/r5E7/6+R
        O/+vkTv/r5E7/6+RO/+vkTv/6cFP/+nBT//pwU//dGAn/3Z0c/92dHP/AAAAgAAAAAAAAAAAAAAAAAMD
        BPpicYP/fpGo/6S+2/+00PD/s8/v/3iLoP8ICQn/7enm/wAAAP9w1/z/cNf8/wAAAP/t6eb/dnRz/3Rg
        J//pwU//6cFP/+nBT//pwU//6cFP/+nBT//pwU//6cFP/+nBT/90YCf/dnRz/3Z0c/8AAACAAAAAAAAA
        AAAAAAAABQgL3hMhMPkTHy7zBggL+i41Pf8fJSv/CAoN/yQmKP/t6eb/AAAA/3DX/P9w1/z/AAAA/+3p
        5v92dHP/dGAn/+nBT//pwU//6cFP/+nBT//pwU//6cFP/+nBT//pwU//6cFP/3RgJ/92dHP/dnRz/wAA
        AIAAAAAAAAAAAAAAAAACBQVoDRYi80Jzqf9Edaz/Lk91/y1Ncv8XICr/j42L/+3p5v8AAAD/cNf8/3DX
        /P8AAAD/7enm/3Z0c/90YCf/6cFP/+nBT//pwU//6cFP/+nBT//pwU//6cFP/+nBT//pwU//dGAn/3Z0
        c/92dHP/AAAAgAAAAAAAAAAAAAAAAAAAAAEDBwqUBAgL9RwwR/UkOE7/DhEU/2dnaP/s6OX/7enm/wAA
        AP9w1/z/cNf8/wAAAP/t6eb/fXp5/zYtFf9tWiX/bVol/21aJf9tWiX/bVol/21aJf9tWiX/bVol/21a
        Jf82LRX/fXt6/3Z0c/8AAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnAAAAsUhHRv/JxcP/7enm/+3p
        5v/t6eb/AwQF/23R9f9t0fX/BAQF/+3p5v/b2NX/gX99/358e/9+fHv/fnx7/358e/9+fHv/fnx7/358
        e/9+fHv/fnx7/4F/ff/c2db/dnRz/wAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAdnRz/+3p
        5v/t6eb/7enm/4yLi/8DAwT/JkBK/yVASf8DAwT/joyM/+3p5v/t6eb/7enm/7KvrP92dHP/dnRz/3Z0
        c/92dHP/sq+s/7KvrP+yr6z/sq+s/7KvrP92dHP/AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AIB2dHP/7enm/+3p5v/MyMb/Dg4U/1lpzv8pMWD/KTFg/1lpzv8ODhT/zMnG/+3p5v/t6eb/sq+s/3Z0
        c/92dHP/dnRz/3Z0c/+yr6z/sq+s/7KvrP+yr6z/sq+s/3Z0c/8AAACAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAgHZ0c/+yr6z/sq+s/4aEgv8yOWr/U2LA/wkLFv8JCxb/UmG//zE5aP+HhIP/7enm/+3p
        5v+yr6z/dnRz/3Z0c/92dHP/dnRz/3Z0c/92dHP/dnRz/3Z0c/+yr6z/dnRz/wAAAIAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACAdnRz/7KvrP+yr6z/joyK/zI5Zv88R4v/U2LA/1Jhv/8JCxb/Gx86/4WD
        gf/t6eb/7enm/7KvrP92dHP/dnRz/3Z0c/92dHP/dnRz/3Z0c/92dHP/dnRz/7KvrP92dHP/AAAAgAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIB2dHP/sq+s/7KvrP/Nysf/EBEX/2Bx3v9ugv//boL//0RQ
        nf8AAAD/mZeV/+3p5v/t6eb/sq+s/3Z0c/92dHP/dnRz/3Z0c/92dHP/dnRz/3Z0c/92dHP/sq+s/3Z0
        c/8AAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgHZ0c/+yr6z/sq+s/+3p5v+Rj4//EBEX/zE4
        Zf8uNWH/DA0S/2VkZP8UFBT/sq+t/+3p5v+yr6z/dnRz/3Z0c/92dHP/dnRz/3Z0c/92dHP/dnRz/3Z0
        c/+yr6z/dnRz/wAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAdnRz/7KvrP+yr6z/7enm/+3p
        5v/Nysf/joyK/4aEgv/Lx8X/7enm/7Kvrf8UFBT/z8zJ/7KvrP92dHP/dnRz/3Z0c/92dHP/dnRz/3Z0
        c/92dHP/dnRz/7KvrP92dHP/AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIB2dHP/sq+s/7Kv
        rP/t6eb/7enm/+3p5v/t6eb/7enm/+3p5v/t6eb/7enm/9DNyv/t6eb/sq+s/3Z0c/92dHP/dnRz/3Z0
        c/92dHP/dnRz/3Z0c/92dHP/sq+s/3Z0c/8AAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgDc2
        Nf9vbWv/b21r/29ta/9vbWv/b21r/29ta/9vbWv/b21r/29ta/9vbWv/b21r/29ta/9vbWv/b21r/29t
        a/9vbWv/b21r/29ta/9vbWv/b21r/29ta/9vbWv/NzY1/wAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACAMDkZ/19yMf9fcjH/X3Ix/19yMf9fcjH/X3Ix/19yMf9fcjH/X3Ix/19yMf9fcjH/X3Ix/19y
        Mf9fcjH/X3Ix/19yMf9fcjH/X3Ix/19yMf9fcjH/X3Ix/19yMf8wORn/AAAAgAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAIBZay7/hqBF/4agRf+GoEX/hqBF/4agRf+GoEX/s9Zc/7PWXP+z1lz/s9Zc/7PW
        XP+z1lz/s9Zc/7PWXP+z1lz/s9Zc/7PWXP+z1lz/s9Zc/7PWXP+z1lz/s9Zc/1lrLv8AAACAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAgFlrLv+GoEX/hqBF/4agRf+GoEX/hqBF/4agRf+z1lz/s9Zc/7PW
        XP+z1lz/s9Zc/7PWXP+z1lz/s9Zc/7PWXP+z1lz/s9Zc/7PWXP+z1lz/s9Zc/7PWXP+z1lz/WWsu/wAA
        AIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcGR4O9VRkK/9UZCv/VGQr/1RkK/9UZCv/VGQr/1Rk
        K/9UZCv/VGQr/1RkK/9UZCv/VGQr/1RkK/9UZCv/VGQr/1RkK/9UZCv/VGQr/1RkK/9UZCv/VGQr/1Rk
        K/8ZHg30AAAAWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAABcAAAAdwAAAHcAAAB3AAAAdwAA
        AHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAA
        AHcAAAB3AAAAdwAAAFwAAAABAB///wAf//8AH///AB///wAf//8AH///AA///wAAAACAAAAAgAAAAOAA
        AADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAAD4AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwA
        AAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAA=
</value>
  </data>
</root>